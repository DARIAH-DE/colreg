<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
						http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.10.xsd">


	<import resource="common-config.xml"/>
	
	<mongo:mongo id="mongoc" host="${mongo.host}" port="${mongo.port}" />
	<mongo:db-factory dbname="${mongo.database}" mongo-ref="mongoc" />
 
 
	<bean id="mongoMoxydomainConverter" class="org.springframework.data.mongodb.core.convert.MappingMongoConverter">
        <constructor-arg index="0" ref="mongoDbFactory" />
        <constructor-arg index="1">
            <bean class="org.springframework.data.mongodb.core.mapping.MongoMappingContext" />
        </constructor-arg>
        <property name="mapKeyDotReplacement" value="~"/>
	</bean>
 
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
		<constructor-arg name="mongoConverter" ref="mongoMoxydomainConverter" />
	</bean>
	
	<bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper" />
	
	<!-- i18n -->
	<bean id="messageSource" class="de.unibamberg.minf.core.web.localization.MessageSource">
	    <property name="basename" value="classpath:i18n/messages" />
	    <property name="loggingMode" value="true" />
	    <property name="cacheSeconds" value="10" />
	</bean>
	
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" >
		<property name="validationMessageSource" ref="messageSource" />
	</bean>
	<bean id="validatingMongoEventListener" class="org.springframework.data.mongodb.core.mapping.event.ValidatingMongoEventListener">
		<constructor-arg name="validator" ref="validator" />
	</bean>
	

	
	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</bean>	
	
	<bean id="xmlMessageConverter" class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter">
	</bean>
	
	<bean id="xmlConverter" class="eu.dariah.de.colreg.model.marshalling.XMLConverter">
		<property name="marshaller" ref="jaxb2Marshaller" />
		<property name="unmarshaller" ref="jaxb2Marshaller" />
	</bean>
	
     <bean id="jaxb2Marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="classesToBeBound">
            <list>
                <value>eu.dariah.de.colreg.model.api.ActionObject</value>
                <value>eu.dariah.de.colreg.model.Agent</value>
                <value>eu.dariah.de.colreg.model.Collection</value>
                <value>eu.dariah.de.colreg.model.api.repository.RepositoryDraftContainer</value>
                <value>eu.dariah.de.colreg.model.api.repository.RepositoryResponse</value>
                <value>eu.dariah.de.colreg.model.api.oaipmh.OaiPmhResponseContainer</value>
            </list>
        </property>
        <property name="marshallerProperties">
        <map>
            <entry key="jaxb.encoding">
                <value>UTF-8</value>
            </entry>
        </map>
    </property>
    </bean>
    
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<property name="messageConverters">
	        <list>
	            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
	            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
	            <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
	            <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>
	            <bean class="org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter"/>
	            <bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter"/>
	            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	                <property name="objectMapper" ref="objectMapper"/>
	            </bean>
	        </list>
    	</property>
    	<property name="requestFactory">
    		<bean class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
	            <property name="readTimeout" value="${api.common.readTimeout:20000}" />
	            <property name="connectTimeout" value="${api.common.connectionTimeout:20000}" />
            </bean>
    	</property>
	</bean>
	
	<bean id="imageService" class="de.unibamberg.minf.core.web.service.ImageServiceImpl">
		<property name="imagePath" value="${paths.images}" />
		<property name="imagesWidth" value="${images.width:1000}" />
		<property name="imagesHeight" value="${images.height:1000}" />
		<property name="thumbnailsWidth" value="${images.thumbnails.width:150}" />
		<property name="thumbnailsHeight" value="${images.thumbnails.height:150}" />
	</bean>
	
    <context:component-scan base-package="eu.dariah.de.dariahsp.configuration" />
    
	<context:component-scan base-package="eu.dariah.de.colreg.dao"/>
	<context:component-scan base-package="eu.dariah.de.colreg.model.validation"/>
	<context:component-scan base-package="eu.dariah.de.colreg.service"/>
</beans>